import{_ as e,D as n,c as h,m as t,a as i,I as a,U as l,o as p}from"./chunks/framework.-ML-6clc.js";const B=JSON.parse('{"title":"Appium Image Comparison","description":"Appium Image Comparison Basic Usage","frontmatter":{"title":"Appium Image Comparison","description":"Appium Image Comparison Basic Usage","head":[["meta",{"name":"description","content":"Image Comparison"}]],"tags":["Appium"],"categories":["Automation Framework"]},"headers":[],"relativePath":"auto-frameworks/appium/appium-image-comparison.md","filePath":"auto-frameworks/appium/appium-image-comparison.md","lastUpdated":1704956743000}'),k={name:"auto-frameworks/appium/appium-image-comparison.md"},r={id:"image-comparison",tabindex:"-1"},E=t("a",{class:"header-anchor",href:"#image-comparison","aria-label":'Permalink to "Image Comparison <Badge type="tip" text="Appium" /><Badge type="warning" text="Automation Framework" />"'},"â€‹",-1),o=l(`<h2 id="image-comparison-feature" tabindex="-1">Image Comparison Feature <a class="header-anchor" href="#image-comparison-feature" aria-label="Permalink to &quot;Image Comparison Feature&quot;">â€‹</a></h2><div class="tip custom-block"><p class="custom-block-title">TIP</p><p><a href="https://appium.github.io/appium.io/docs/en/writing-running-appium/image-comparison/" target="_blank" rel="noreferrer">Official document</a> ðŸŒŸ</p></div><p>This feature require OpenCV 3+ native libraries and <code>opencv4nodejs</code> npm module, see <a href="./../../software/opencv4nodejs-macos.html"><em>here</em></a> to install those requirements on MacOS.</p><p>Additionally, the <code>image</code> plugin is also required and do not forget active the plugin when starting Appium server.</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># install image plugin</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">appium</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> plugin</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> images</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># starting appium with image plugin</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">appium</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --use-plugins</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> images</span></span></code></pre></div><h3 id="feature-based-comparison" tabindex="-1">Feature-based Comparison <a class="header-anchor" href="#feature-based-comparison" aria-label="Permalink to &quot;Feature-based Comparison&quot;">â€‹</a></h3><p>Performs images matching by template to find possible occurrence of the partial image in the full image. Such comparison is useful in case the resulting image is rotated/scaled in comparison to the original one.</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">byte</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[] screenshot </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Base64.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getEncoder</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">encode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(iosDriver.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getScreenshotAs</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(OutputType.BYTES));</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">FeaturesMatchingResult result </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> iosDriver</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">matchImagesFeatures</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(screenshot, screenshot,</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">                new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> FeaturesMatchingOptions</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                        .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">withDetectorName</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(FeatureDetector.ORB)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                        .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">withGoodMatchesFactor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">40</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                        .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">withMatchFunc</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(MatchingFunction.BRUTE_FORCE_HAMMING)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                        .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">withEnabledVisualization</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">());</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Assert.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">assertTrue</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(result.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getVisualization</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().length </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Assert.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">assertTrue</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(result.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getCount</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Assert.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">assertTrue</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(result.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getTotalCount</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Assert.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">assertFalse</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(result.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getPoints1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">isEmpty</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">());</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Assert.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">assertFalse</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(result.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getPoints2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">isEmpty</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">());</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Assert.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">assertNotNull</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(result.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getRect1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">());</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Assert.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">assertNotNull</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(result.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getRect2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">());</span></span></code></pre></div><h3 id="occurrences-lookup" tabindex="-1">Occurrences Lookup <a class="header-anchor" href="#occurrences-lookup" aria-label="Permalink to &quot;Occurrences Lookup&quot;">â€‹</a></h3><p>Performs images matching by template to find possible occurrence of the partial image in the full image. Such comparison is useful in case the full image is a superset of the partial image.</p><p>There is a subtle difference between occurrence comparison and feature comparison. The former is to be used when the image to be found is a subset of the target/screenshot. The latter is to be used when the image to be found is basically the same as the target but rotated and/or scaled.</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">byte</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[] screenshot </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ScreenshotUtils.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">takeScreenshot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(iosDriver);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">OccurrenceMatchingResult result </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> iosDriver</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">findImageOccurrence</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(screenshot, screenshot, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> OccurrenceMatchingOptions</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">withEnabledVisualization</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">());</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Assert.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">assertTrue</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(result.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getVisualization</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().length </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Assert.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">assertNotNull</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(result.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getRect</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">());</span></span></code></pre></div><h3 id="similarity-calculation" tabindex="-1">Similarity Calculation <a class="header-anchor" href="#similarity-calculation" aria-label="Permalink to &quot;Similarity Calculation&quot;">â€‹</a></h3><p>Performs images matching to calculate the similarity score between them. The flow there is similar to the one used in <code>findImageOccurrence</code>, but it is mandatory that both images are of equal size. Such comparison is useful in case the original image is a copy of the original one, but with changed content.</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">byte</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[] screenshot </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ScreenshotUtils.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">takeScreenshot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(iosDriver);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">SimilarityMatchingResult result </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> iosDriver</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getImagesSimilarity</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(screenshot, screenshot, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> SimilarityMatchingOptions</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">withEnabledVisualization</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">());</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Assert.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">assertTrue</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(result.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getVisualization</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().length </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Assert.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">assertTrue</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(result.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getScore</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.0d</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div>`,15);function g(d,c,y,u,m,F){const s=n("Badge");return p(),h("div",null,[t("h1",r,[i("Image Comparison "),a(s,{type:"tip",text:"Appium"}),a(s,{type:"warning",text:"Automation Framework"}),i(),E]),o])}const b=e(k,[["render",g]]);export{B as __pageData,b as default};
