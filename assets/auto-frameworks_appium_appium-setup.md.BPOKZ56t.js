import{_ as t,D as n,c as l,m as e,a as s,I as a,U as p,o}from"./chunks/framework.-ML-6clc.js";const v=JSON.parse('{"title":"Appium Setup","titleTemplate":"Setup for Appium","description":"Appium install and setup","frontmatter":{"title":"Appium Setup","titleTemplate":"Setup for Appium","description":"Appium install and setup","head":[["meta",{"name":"description","content":"Appium install and setup"}]],"tags":["Appium"],"categories":["Automation Framework"]},"headers":[],"relativePath":"auto-frameworks/appium/appium-setup.md","filePath":"auto-frameworks/appium/appium-setup.md","lastUpdated":1704943645000}'),r={name:"auto-frameworks/appium/appium-setup.md"},h={id:"appium-setup",tabindex:"-1"},d=e("a",{class:"header-anchor",href:"#appium-setup","aria-label":'Permalink to "Appium Setup <Badge type="tip" text="Appium" /><Badge type="warning" text="Automation Framework" />"'},"​",-1),k=p(`<blockquote><p><a href="https://appium.io/" target="_blank" rel="noreferrer">Official Documentation</a></p></blockquote><h2 id="appium-requirements" tabindex="-1">Appium Requirements <a class="header-anchor" href="#appium-requirements" aria-label="Permalink to &quot;Appium Requirements&quot;">​</a></h2><p>Follow the official documentation, the basic requirements for the Appium server are:</p><ul><li>A macOS, Linux, or Windows operating system</li><li>Node.js version in the SemVer range <code>^14.17.0 || ^16.13.0 || &gt;=18.0.0</code></li><li>NPM version &gt;= 8 (NPM is usually bundled with Node.js, but can be upgraded independently)</li></ul><h2 id="install-appium" tabindex="-1">Install Appium <a class="header-anchor" href="#install-appium" aria-label="Permalink to &quot;Install Appium&quot;">​</a></h2><p>Installing Appium is as easy as running a single NPM command:</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> i</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --location=global</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> appium</span></span></code></pre></div><p>This command installs Appium globally on your system so that you can access it from the command line simply by running the <code>appium</code> command. Go ahead and run it now:</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">appium</span></span></code></pre></div><h2 id="install-the-uiautomator2-driver-for-android" tabindex="-1">Install the UiAutomator2 Driver (for Android) <a class="header-anchor" href="#install-the-uiautomator2-driver-for-android" aria-label="Permalink to &quot;Install the UiAutomator2 Driver (for Android)&quot;">​</a></h2><h3 id="set-up-android-automation-requirements" tabindex="-1">Set up Android automation requirements <a class="header-anchor" href="#set-up-android-automation-requirements" aria-label="Permalink to &quot;Set up Android automation requirements&quot;">​</a></h3><p>According to the driver, in addition to a working Appium server, we also need to do the following:</p><ul><li>Download <a href="https://developer.android.com/studio/releases/platform-tools" target="_blank" rel="noreferrer">Android SDK platform tools</a>. You will probably want to download <a href="https://developer.android.com/studio" target="_blank" rel="noreferrer">Android Studio</a> and manage the SDK tools from within it for the easiest experience.</li><li>Set an environment variable pointing to the directory on disk where the Android tools installed. You can usually find the path to this directory in the Android Studio SDK manager. It will contains the <code>platform-tools</code> and other directories. We need to define and persist the environment variable as <code>ANDROID_HOME</code>.</li><li>Use the Java JDK (for the most recent Android API levels, JDK 9 is required, otherwise JDK 8 is required). It&#39;s easiest to use the <a href="https://openjdk.java.net/install/" target="_blank" rel="noreferrer">OpenJDK packages</a>.</li><li>When the JDK is installed, you&#39;ll need to find the path to the JDK home directory as it was installed on your system. This will be the directory that contains the <code>bin</code>, <code>include</code>, and other directories. The path must be persisted as an environment variable named <code>JAVA_HOME</code>, so that Appium can find the appropriate Java tooling that is required to work with the Android platform.</li><li>Use Android Studio to create and launch an Android Virtual Device (an AVD, otherwise known as an emulator). You may need to download the system images for the API level of the emulator you want to create. Using the AVD creation wizard in Android Studio is generally the easiest way to do all of this.<div class="tip custom-block"><p class="custom-block-title">Note</p><p>You can also use a physical Android device, so long as it is configured for debugging and development.</p></div></li><li>With the emulator or device connected, you can run <code>adb services</code> (via the binary located at <code>$ANDROID_HOME/platform-tools/adb</code>) to verify that your device shows up as connected.</li></ul><p><strong>Run emulator in shell</strong>, for example in MacOS:</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Library/Android/sdk/emulator</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># list devices</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./emulator</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -list-avds</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># start a device</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./emulator</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -avd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> {ADV_NAME}</span></span></code></pre></div><h3 id="install-the-driver-itself" tabindex="-1">Install the driver itself <a class="header-anchor" href="#install-the-driver-itself" aria-label="Permalink to &quot;Install the driver itself&quot;">​</a></h3><p>You can install it easily via the <a href="https://appium.io/docs/en/2.2/cli/extensions/" target="_blank" rel="noreferrer">Appium Extension CLI</a>:</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">appium</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> driver</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> uiautomator2</span></span></code></pre></div><h2 id="install-the-xcuitest-driver-for-ios" tabindex="-1">Install the XCUITest Driver (for iOS) <a class="header-anchor" href="#install-the-xcuitest-driver-for-ios" aria-label="Permalink to &quot;Install the XCUITest Driver (for iOS)&quot;">​</a></h2><p>First you should install Xcode in apple store, and install simulator in xcode. Then you can install XCUITest driver with CLI:</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">appium</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> driver</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> xcuitest</span></span></code></pre></div><h2 id="install-appium-inspector" tabindex="-1">Install Appium Inspector <a class="header-anchor" href="#install-appium-inspector" aria-label="Permalink to &quot;Install Appium Inspector&quot;">​</a></h2><p><a href="https://github.com/appium/appium-inspector" target="_blank" rel="noreferrer">Appium Inspector</a> is a GUI inspector for mobile apps and more, powered by a (separately installed) Appium server. Appium Inspector is basically just an Appium client (like WebdriverIO, Appium&#39;s Java client, Appium&#39;s Python client, etc...) with a user interface. There&#39;s an interface for specifying which Appium server to use, which capabilities to set, and then interacting with elements and other Appium commands once you&#39;ve started a session.</p><h2 id="install-appium-doctor-optional" tabindex="-1">Install Appium Doctor (Optional) <a class="header-anchor" href="#install-appium-doctor-optional" aria-label="Permalink to &quot;Install Appium Doctor (Optional)&quot;">​</a></h2><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Official Repository: <a href="https://github.com/appium/appium-doctor" target="_blank" rel="noreferrer"><em>here</em></a></p></div><p>Attempts to diagnose and fix common Node, iOS and Android configuration issues before starting Appium.</p><p>Install:</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> appium-doctor</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -g</span></span></code></pre></div><p>Usage:</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">➜</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  appium-doctor</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -h</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Usage:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> appium-doctor.js</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [options, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">defaults:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --ios</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --android</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Options:</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  --ios</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">       Check</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> iOS</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> setup</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                             [boolean]</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  --android</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   Check</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Android</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> setup</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                         [boolean]</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  --dev</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">       Check</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dev</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> setup</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                             [boolean]</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  --debug</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">     Show</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> debug</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> messages</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                         [boolean]</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  --yes</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">       Always</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> respond</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> yes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                          [boolean]</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  --no</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        Always</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> respond</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> no</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                           [boolean]</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  --demo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      Run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> appium-doctor</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> demo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (for </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">dev</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).           [boolean]</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  -h,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --help</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  Show</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> help</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                                   [boolean]</span></span></code></pre></div><h2 id="others" tabindex="-1">Others <a class="header-anchor" href="#others" aria-label="Permalink to &quot;Others&quot;">​</a></h2><p><strong>Demo Apps</strong>:</p><ol><li>From <a href="https://github.com/saucelabs/my-demo-app-rn/" target="_blank" rel="noreferrer">saucelabs repository</a></li><li>From <a href="https://github.com/webdriverio/native-demo-app" target="_blank" rel="noreferrer">WebDriverIO</a></li></ol>`,33);function c(u,m,g,F,y,b){const i=n("Badge");return o(),l("div",null,[e("h1",h,[s("Appium Setup "),a(i,{type:"tip",text:"Appium"}),a(i,{type:"warning",text:"Automation Framework"}),s(),d]),k])}const f=t(r,[["render",c]]);export{v as __pageData,f as default};
