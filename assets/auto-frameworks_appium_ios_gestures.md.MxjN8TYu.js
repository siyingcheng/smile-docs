import{_ as t,D as n,c as l,m as a,a as s,I as e,U as h,o as p}from"./chunks/framework.45DzPjpZ.js";const f=JSON.parse('{"title":"Appium","titleTemplate":"IOS Gestures","description":"Appium IOS Gestures","frontmatter":{"title":"Appium","titleTemplate":"IOS Gestures","description":"Appium IOS Gestures","head":[["meta",{"name":"description","content":"Appium IOS Gestures"}]],"tags":["Appium"],"categories":["Automation Framework"]},"headers":[],"relativePath":"auto-frameworks/appium/ios/gestures.md","filePath":"auto-frameworks/appium/ios/gestures.md","lastUpdated":1705231380000}'),r={name:"auto-frameworks/appium/ios/gestures.md"},o={id:"ios-gestures",tabindex:"-1"},k=a("a",{class:"header-anchor",href:"#ios-gestures","aria-label":'Permalink to "IOS Gestures <Badge type="tip" text="Appium" /><Badge type="warning" text="Automation Framework" />"'},"​",-1),d=h(`<div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Refer from <a href="https://github.com/clarabez/appium-1/blob/master/docs/en/writing-running-appium/ios/ios-xctest-mobile-gestures.md" target="_blank" rel="noreferrer"><em>here</em></a></p><hr><p>⭐ Also see <a href="https://www.w3.org/TR/webdriver/#actions" target="_blank" rel="noreferrer"><em>W3C actions</em></a></p></div><p>Unfortunately Apple&#39;s XCTest framework does not natively support W3C standards for TouchAction interface implementation. Although, it provides rich set of gestures, including these, that are unique for iOS platform. It is possible to directly invoke these gestures in Appium starting from version 1.6.4-beta.</p><p>It is important to remember that XCTest and WDA are being constantly changed. This means all &quot;mobile: *&quot; commands can be also subject of change in Appium without any preliminary notice.</p><h2 id="mobile-swipe" tabindex="-1">mobile: swipe <a class="header-anchor" href="#mobile-swipe" aria-label="Permalink to &quot;mobile: swipe&quot;">​</a></h2><p>This gesture performs a simple &quot;swipe&quot; gesture on the particular screen element or on the application element, which is usually the whole screen. This method does not accept coordinates and simply emulates single swipe with one finger. It might be useful for such cases like album pagination, switching views, etc. More advanced cases may require to call <code>mobile: dragFromToForDuration</code>, where one can supply coordinates and duration.</p><p>Supported arguments:</p><ul><li><em>direction</em>: <code>up</code>, <code>down</code>, <code>left</code>, or <code>right</code>. The argument is mandatory</li><li><em>velocity</em>: This argument is optional and is only supported since Appium server version 1.19 and Xcode SDK version 11.4+. The value is measured in pixels per second and same values could behave differently on different devices depending on their display density. Higher values make swipe gesture faster (which usually scrolls larger areas if we apply it to a list) and lower values slow it down. Only values greater than zero have effect.</li><li><em>element</em>: The internal element identifier (as hexadecimal hash string) to swipe on. Application element will be used instead if this argument is not provided</li></ul><p>Usage examples:</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">JavascriptExecutor js </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (JavascriptExecutor) driver;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Map&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Object</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; params </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> HashMap&lt;&gt;();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">params.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">put</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;direction&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;down&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">params.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">put</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;velocity&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2500</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">params.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">put</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;element&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, ((RemoteWebElement) element).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getId</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">());</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">js.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">executeScript</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;mobile: swipe&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, params);</span></span></code></pre></div><h2 id="mobile-scroll" tabindex="-1">mobile: scroll <a class="header-anchor" href="#mobile-scroll" aria-label="Permalink to &quot;mobile: scroll&quot;">​</a></h2><p>Scrolls the element or the whole screen. Different scrolling strategies are supported. Arguments define the chosen strategy: either <code>name</code>, <code>direction</code>, <code>predicateString</code> or <code>toVisible</code> in that order. All strategies are exclusive and only one strategy can be applied at a single moment of time. Use <code>mobile: scroll</code> to emulate precise scrolling in tables or collection views, where it is already known to which element the scrolling should be performed. Although, there is one known limitation there: in case it is necessary to perform too many scroll gestures on parent container to reach the necessary child element (tens of them) then the method call may fail.</p><p>Supported arguments:</p><ul><li><em>element</em>: The internal element identifier (as hexadecimal hash string) to scroll on. Application element will be used if this argument is not set</li><li><em>name</em>: the accessibility id of the child element, to which scrolling is performed. The same result can be achieved by setting predicateString argument to <code>name == accessibilityId</code>. Has no effect if element is not a container</li><li><em>direction</em>: Either <code>up</code>, <code>down</code>, <code>left</code> or <code>right</code>. The main difference from swipe call with the same argument is that scroll will try to move the current viewport exactly to the next/previous page (the term &quot;page&quot; means the content, which fits into a single device screen)</li><li><em>predicateString</em>: the NSPredicate locator of the child element, to which the scrolling should be performed. Has no effect if element is not a container</li><li><em>toVisible</em>: Boolean parameter. If set to true then asks to scroll to the first visible element in the parent container. Has no effect if element is not set</li></ul><p>Usage examples:</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">driver.execute_script(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;mobile: scroll&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, {</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;direction&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;down&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">;</span></span></code></pre></div><h2 id="mobile-pinch" tabindex="-1">mobile: pinch <a class="header-anchor" href="#mobile-pinch" aria-label="Permalink to &quot;mobile: pinch&quot;">​</a></h2><p>Performs pinch gesture on the given element or on the application element.</p><p>Supported arguments：</p><ul><li><em>element</em>: The internal element identifier (as hexadecimal hash string) to pinch on. Application element will be used instead if this parameter is not provided</li><li><em>scale</em>: Pinch scale of type float. Use a scale between 0 and 1 to &quot;pinch close&quot; or zoom out and a scale greater than 1 to &quot;pinch open&quot; or zoom in. Mandatory parameter</li><li><em>velocity</em>: The velocity of the pinch in scale factor per second (float value). Mandatory parameter</li></ul><p>Usage examples:</p><div class="language-ruby vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ruby</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">execute_script </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;mobile: pinch&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">scale:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">velocity:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1.1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">element:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> element.ref</span></span></code></pre></div><h2 id="mobile-doubletap" tabindex="-1">mobile: doubleTap <a class="header-anchor" href="#mobile-doubletap" aria-label="Permalink to &quot;mobile: doubleTap&quot;">​</a></h2><p>Performs double tap gesture on the given element or on the screen.</p><p>Supported arguments:</p><ul><li><em>element</em>: The internal element identifier (as hexadecimal hash string) to double tap on</li><li><em>x</em>: Screen x tap coordinate of type float. Mandatory parameter only if element is not set</li><li><em>y</em>: Screen y tap coordinate of type float. Mandatory parameter only if element is not set</li></ul><p>Usage examples:</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">driver.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">execute</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;mobile: doubleTap&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, { element: element.value.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ELEMENT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> });</span></span></code></pre></div><h2 id="mobile-touchandhold" tabindex="-1">mobile: touchAndHold <a class="header-anchor" href="#mobile-touchandhold" aria-label="Permalink to &quot;mobile: touchAndHold&quot;">​</a></h2><p>Performs long press gesture on the given element or on the screen.</p><p>Supported arguments:</p><ul><li><em>element</em>: The internal element identifier (as hexadecimal hash string) to long tap on</li><li><em>duration</em>: The float duration of press action in seconds. Mandatory parameter</li><li><em>x</em>: Screen x long tap coordinate of type float. Mandatory parameter only if element is not set</li><li><em>y</em>: Screen y long tap coordinate of type float. Mandatory parameter only if element is not set</li></ul><p>Usage examples:</p><div class="language-c# vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c#</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// c#</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Dictionary</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">object</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tfLongTap</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Dictionary</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">object</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">tfLongTap.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Add</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;element&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, element.Id);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">tfLongTap.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Add</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;duration&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">((</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">IJavaScriptExecutor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)driver).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ExecuteScript</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;mobile: touchAndHold&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, tfLongTap);</span></span></code></pre></div><h2 id="mobile-twofingertap" tabindex="-1">mobile: twoFingerTap <a class="header-anchor" href="#mobile-twofingertap" aria-label="Permalink to &quot;mobile: twoFingerTap&quot;">​</a></h2><p>Performs two finger tap gesture on the given element or on the application element.</p><p>Supported arguments:</p><ul><li><em>element</em>: The internal element identifier (as hexadecimal hash string) to double tap on. Application element will be used instead if this parameter is not provided.</li></ul><p>Usage examples:</p><div class="language-c# vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c#</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// c#</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Dictionary</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">object</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tfTap</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Dictionary</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">object</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">tfTap.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Add</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;element&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, element.Id);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">((</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">IJavaScriptExecutor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)driver).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ExecuteScript</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;mobile: twoFingerTap&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, tfTap);</span></span></code></pre></div><h2 id="mobile-tap" tabindex="-1">mobile: tap <a class="header-anchor" href="#mobile-tap" aria-label="Permalink to &quot;mobile: tap&quot;">​</a></h2><p>Performs tap gesture by coordinates on the given element or on the screen.</p><p>Supported arguments:</p><ul><li><em>element</em>: The internal element identifier (as hexadecimal hash string) to long tap on. x and y tap coordinates will be calculated relatively to the current element position on the screen if this argument is provided. Otherwise they should be calculated relatively to screen borders.</li><li><em>x</em>: x tap coordinate of type float. Mandatory parameter</li><li><em>y</em>: y tap coordinate of type float. Mandatory parameter</li></ul><p>Usage examples:</p><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// PHP</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$params </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> array</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">array</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;x&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 100.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;y&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 50.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;element&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> element</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">GetAttribute</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;id&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)));</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$driver</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">executeScript</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;mobile: tap&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, $params);</span></span></code></pre></div><h2 id="mobile-dragfromtoforduration" tabindex="-1">mobile: dragFromToForDuration <a class="header-anchor" href="#mobile-dragfromtoforduration" aria-label="Permalink to &quot;mobile: dragFromToForDuration&quot;">​</a></h2><p>Performs drag and drop gesture by coordinates. This can be done either on an element or on the screen</p><p>Supported arguments:</p><ul><li><em>element</em>: The internal element identifier (as hexadecimal hash string) to perform drag on. All the coordinates will be calculated relatively this this element position on the screen. Absolute screen coordinates are expected if this argument is not set</li><li><em>duration</em>: Float number of seconds in range [0.5, 60]. How long the tap gesture at starting drag point should be before to start dragging. Mandatory parameter</li><li><em>fromX</em>: The x coordinate of starting drag point (type float). Mandatory parameter</li><li><em>fromY</em>: The y coordinate of starting drag point (type float). Mandatory parameter</li><li><em>toX</em>: The x coordinate of ending drag point (type float). Mandatory parameter</li><li><em>toY</em>: The y coordinate of ending drag point (type float). Mandatory parameter</li></ul><p>Usage examples:</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Java</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">JavascriptExecutor js </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (JavascriptExecutor) driver;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Map&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Object</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; params </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> HashMap&lt;&gt;();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">params.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">put</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;duration&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">params.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">put</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;fromX&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">params.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">put</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;fromY&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">params.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">put</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;toX&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">200</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">params.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">put</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;toY&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">200</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">params.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">put</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;element&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, ((RemoteWebElement) element).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getId</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">());</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">js.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">executeScript</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;mobile: dragFromToForDuration&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, params);</span></span></code></pre></div><h2 id="mobile-alert" tabindex="-1">mobile: alert <a class="header-anchor" href="#mobile-alert" aria-label="Permalink to &quot;mobile: alert&quot;">​</a></h2><p>Performs operations on NSAlert instance.</p><p>Supported arguments:</p><ul><li><em>action</em>: The following actions are supported: <code>accept</code>, <code>dismiss</code> and <code>getButtons</code>. Mandatory parameter</li><li><em>buttonLabel</em>: The label text of an existing alert button to click on. This is an optional parameter and is only valid in combination with accept and dismiss actions.</li></ul><p>Usage examples:</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Python</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">driver.execute_script(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;mobile: alert&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, {</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;action&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;accept&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;buttonLabel&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;My Cool Alert Button&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">;</span></span></code></pre></div>`,57);function E(g,c,m,y,u,F){const i=n("Badge");return p(),l("div",null,[a("h1",o,[s("IOS Gestures "),e(i,{type:"tip",text:"Appium"}),e(i,{type:"warning",text:"Automation Framework"}),s(),k]),d])}const C=t(r,[["render",E]]);export{f as __pageData,C as default};
